# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_snowflake_dbt_project'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project. 
# In dbt Cloud IDE, this field is unused.
profile: 'snowflake_demo_project'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# on-run-start and on-run-end are SQL statement(s) or macros that run at the end of 
# dbt run/dbt/seed/dbt snapshot commands. 
#Full documentation: https://docs.getdbt.com/reference/project-configs/on-run-start-on-run-end
on-run-end:
  - "{{ grant_all_on_schemas(schemas, 'public') }}"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the staging folder
# as views and in the marts/core folder as tables.
# These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  my_snowflake_dbt_project:
      # Applies to all files under models/example/
      staging:
          +materialized: view
          schema: staging
          query_tag: dbt_staging
          snowflake_warehouse: compute_wh
      marts:
        core:
          +materialized: table
          query_tag: dbt_marts          
